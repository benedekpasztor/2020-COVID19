<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='datafordashboard' inline='true' name='federated.12lpec714qinjx19lglrq1pbjisr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datafordashboard' name='textscan.147hme80rc4t2f101wldb1jit0e7'>
            <connection class='textscan' directory='C:/Users/Benedek Pasztor/Documents/home-projects/2020-COVID19/data/clean' filename='datafordashboard.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.147hme80rc4t2f101wldb1jit0e7' name='datafordashboard.csv' table='[datafordashboard#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='province' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='lat' ordinal='2' />
            <column datatype='real' name='lon' ordinal='3' />
            <column datatype='date' name='date' ordinal='4' />
            <column datatype='integer' name='confirmed' ordinal='5' />
            <column datatype='integer' name='deaths' ordinal='6' />
            <column datatype='integer' name='recovered' ordinal='7' />
            <column datatype='integer' name='day_since_first_case' ordinal='8' />
            <column datatype='integer' name='active' ordinal='9' />
            <column datatype='integer' name='confirmed_daily' ordinal='10' />
            <column datatype='integer' name='deaths_daily' ordinal='11' />
            <column datatype='integer' name='recovered_dailty' ordinal='12' />
            <column datatype='integer' name='active_daily' ordinal='13' />
            <column datatype='string' name='icon' ordinal='14' />
            <column datatype='real' name='temperatureHigh' ordinal='15' />
            <column datatype='real' name='temperatureLow' ordinal='16' />
            <column datatype='real' name='apparentTemperatureMin' ordinal='17' />
            <column datatype='real' name='apparentTemperatureMax' ordinal='18' />
            <column datatype='real' name='cloudCover' ordinal='19' />
            <column datatype='real' name='pressure' ordinal='20' />
            <column datatype='real' name='temperature_std' ordinal='21' />
            <column datatype='real' name='apparenttemperature_std' ordinal='22' />
            <column datatype='real' name='pressure_std' ordinal='23' />
            <column datatype='integer' name='month' ordinal='24' />
            <column datatype='string' name='deaths_monthly_no' ordinal='25' />
            <column datatype='string' name='deaths_monthly_datayear' ordinal='26' />
            <column datatype='string' name='average_daily_deaths' ordinal='27' />
            <column datatype='integer' name='worldbankdata_datayear' ordinal='28' />
            <column datatype='string' name='region' ordinal='29' />
            <column datatype='integer' name='population_no' ordinal='30' />
            <column datatype='real' name='gdppc_usdpc' ordinal='31' />
            <column datatype='real' name='gdp_usd' ordinal='32' />
            <column datatype='real' name='area_km2' ordinal='33' />
            <column datatype='real' name='lifeexp_y' ordinal='34' />
            <column datatype='real' name='urbanpop_perc' ordinal='35' />
            <column datatype='integer' name='internationaltourist_yearly_no' ordinal='36' />
            <column datatype='integer' name='elderly_65above_no' ordinal='37' />
            <column datatype='integer' name='age_median_datayear' ordinal='38' />
            <column datatype='real' name='age_median_y' ordinal='39' />
            <column datatype='integer' name='exp_on_healthcare_government_usdpc_datayear' ordinal='40' />
            <column datatype='real' name='exp_on_healthcare_government_usdpc_y' ordinal='41' />
            <column datatype='integer' name='exp_on_healthcare_total_usdpc_datayear' ordinal='42' />
            <column datatype='real' name='exp_on_healthcare_total_usdpc_y' ordinal='43' />
            <column datatype='real' name='pop_density_nkm2' ordinal='44' />
            <column datatype='real' name='population_million' ordinal='45' />
            <column datatype='real' name='population_elderly' ordinal='46' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[confirmed]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_since_first_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day_since_first_case]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>day_since_first_case</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confirmed_daily</remote-name>
            <remote-type>20</remote-type>
            <local-name>[confirmed_daily]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>confirmed_daily</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths_daily</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths_daily]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>deaths_daily</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered_dailty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered_dailty]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>recovered_dailty</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_daily</remote-name>
            <remote-type>20</remote-type>
            <local-name>[active_daily]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>active_daily</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icon</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icon]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>icon</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperatureHigh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperatureHigh]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>temperatureHigh</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperatureLow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperatureLow]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>temperatureLow</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>apparentTemperatureMin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[apparentTemperatureMin]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>apparentTemperatureMin</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>apparentTemperatureMax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[apparentTemperatureMax]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>apparentTemperatureMax</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cloudCover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cloudCover]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>cloudCover</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>pressure</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature_std</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature_std]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>temperature_std</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>apparenttemperature_std</remote-name>
            <remote-type>5</remote-type>
            <local-name>[apparenttemperature_std]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>apparenttemperature_std</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure_std</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure_std]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>pressure_std</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths_monthly_no</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths_monthly_no]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>deaths_monthly_no</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths_monthly_datayear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deaths_monthly_datayear]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>deaths_monthly_datayear</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_daily_deaths</remote-name>
            <remote-type>129</remote-type>
            <local-name>[average_daily_deaths]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>average_daily_deaths</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>worldbankdata_datayear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[worldbankdata_datayear]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>worldbankdata_datayear</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_no</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population_no]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>population_no</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdppc_usdpc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdppc_usdpc]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>gdppc_usdpc</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_usd]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>gdp_usd</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area_km2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[area_km2]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>area_km2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lifeexp_y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lifeexp_y]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>lifeexp_y</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbanpop_perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[urbanpop_perc]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>urbanpop_perc</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>internationaltourist_yearly_no</remote-name>
            <remote-type>20</remote-type>
            <local-name>[internationaltourist_yearly_no]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>internationaltourist_yearly_no</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elderly_65above_no</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elderly_65above_no]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>elderly_65above_no</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_median_datayear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age_median_datayear]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>age_median_datayear</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age_median_y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[age_median_y]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>age_median_y</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exp_on_healthcare_government_usdpc_datayear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[exp_on_healthcare_government_usdpc_datayear]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>exp_on_healthcare_government_usdpc_datayear</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exp_on_healthcare_government_usdpc_y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[exp_on_healthcare_government_usdpc_y]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>exp_on_healthcare_government_usdpc_y</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exp_on_healthcare_total_usdpc_datayear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[exp_on_healthcare_total_usdpc_datayear]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>exp_on_healthcare_total_usdpc_datayear</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exp_on_healthcare_total_usdpc_y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[exp_on_healthcare_total_usdpc_y]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>exp_on_healthcare_total_usdpc_y</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop_density_nkm2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pop_density_nkm2]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>pop_density_nkm2</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_million]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>population_million</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_elderly</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_elderly]</local-name>
            <parent-name>[datafordashboard.csv]</parent-name>
            <remote-alias>population_elderly</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
      <column caption='Active Daily' datatype='integer' name='[active_daily]' role='measure' type='quantitative' />
      <column caption='Age Median Datayear' datatype='integer' name='[age_median_datayear]' role='measure' type='quantitative' />
      <column caption='Age Median Y' datatype='real' name='[age_median_y]' role='measure' type='quantitative' />
      <column caption='Apparent Temperature Max' datatype='real' name='[apparentTemperatureMax]' role='measure' type='quantitative' />
      <column caption='Apparent Temperature Min' datatype='real' name='[apparentTemperatureMin]' role='measure' type='quantitative' />
      <column caption='Apparenttemperature Std' datatype='real' name='[apparenttemperature_std]' role='measure' type='quantitative' />
      <column caption='Area Km2' datatype='real' name='[area_km2]' role='measure' type='quantitative' />
      <column caption='Average Daily Deaths' datatype='string' name='[average_daily_deaths]' role='dimension' type='nominal' />
      <column caption='Cloud Cover' datatype='real' name='[cloudCover]' role='measure' type='quantitative' />
      <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
      <column caption='Confirmed Daily' datatype='integer' name='[confirmed_daily]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day Since First Case' datatype='integer' name='[day_since_first_case]' role='dimension' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Deaths Daily' datatype='integer' name='[deaths_daily]' role='measure' type='quantitative' />
      <column caption='Deaths Monthly Datayear' datatype='string' name='[deaths_monthly_datayear]' role='dimension' type='nominal' />
      <column caption='Deaths Monthly No' datatype='string' name='[deaths_monthly_no]' role='dimension' type='nominal' />
      <column caption='Elderly 65Above No' datatype='integer' name='[elderly_65above_no]' role='measure' type='quantitative' />
      <column caption='Exp On Healthcare Government Usdpc Datayear' datatype='integer' name='[exp_on_healthcare_government_usdpc_datayear]' role='measure' type='quantitative' />
      <column caption='Exp On Healthcare Government Usdpc Y' datatype='real' name='[exp_on_healthcare_government_usdpc_y]' role='measure' type='quantitative' />
      <column caption='Exp On Healthcare Total Usdpc Datayear' datatype='integer' name='[exp_on_healthcare_total_usdpc_datayear]' role='measure' type='quantitative' />
      <column caption='Exp On Healthcare Total Usdpc Y' datatype='real' name='[exp_on_healthcare_total_usdpc_y]' role='measure' type='quantitative' />
      <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
      <column caption='Gdppc Usdpc' datatype='real' name='[gdppc_usdpc]' role='measure' type='quantitative' />
      <column caption='Icon' datatype='string' name='[icon]' role='dimension' type='nominal' />
      <column caption='Internationaltourist Yearly No' datatype='integer' name='[internationaltourist_yearly_no]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Lifeexp Y' datatype='real' name='[lifeexp_y]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Pop Density Nkm2' datatype='real' name='[pop_density_nkm2]' role='measure' type='quantitative' />
      <column caption='Population Elderly' datatype='real' name='[population_elderly]' role='measure' type='quantitative' />
      <column caption='Population Million' datatype='real' name='[population_million]' role='measure' type='quantitative' />
      <column caption='Population No' datatype='integer' name='[population_no]' role='measure' type='quantitative' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Pressure Std' datatype='real' name='[pressure_std]' role='measure' type='quantitative' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='Recovered Dailty' datatype='integer' name='[recovered_dailty]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Temperature High' datatype='real' name='[temperatureHigh]' role='measure' type='quantitative' />
      <column caption='Temperature Low' datatype='real' name='[temperatureLow]' role='measure' type='quantitative' />
      <column caption='Temperature Std' datatype='real' name='[temperature_std]' role='measure' type='quantitative' />
      <column caption='Urbanpop Perc' datatype='real' name='[urbanpop_perc]' role='measure' type='quantitative' />
      <column caption='Worldbankdata Datayear' datatype='integer' name='[worldbankdata_datayear]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='country, province'>
          <field>[country]</field>
          <field>[province]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.302158' measure-ordering='alphabetic' measure-percentage='0.697842' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Hungary&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='datafordashboard' name='federated.12lpec714qinjx19lglrq1pbjisr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12lpec714qinjx19lglrq1pbjisr'>
            <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column caption='Confirmed Daily' datatype='integer' name='[confirmed_daily]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[confirmed]' derivation='None' name='[none:confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[confirmed_daily]' derivation='None' name='[none:confirmed_daily:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-03-21#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe &amp; Central Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12lpec714qinjx19lglrq1pbjisr].[none:date:ok]</column>
            <column>[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12lpec714qinjx19lglrq1pbjisr].[none:confirmed_daily:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:confirmed_daily:qk]' />
              <size column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:confirmed:qk]' />
              <lod column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12lpec714qinjx19lglrq1pbjisr].[Latitude (generated)]</rows>
        <cols>[federated.12lpec714qinjx19lglrq1pbjisr].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{30BA08FF-6CCC-41DC-8BE9-640F918D6671}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='datafordashboard' name='federated.12lpec714qinjx19lglrq1pbjisr' />
          </datasources>
          <datasource-dependencies datasource='federated.12lpec714qinjx19lglrq1pbjisr'>
            <column caption='Active' datatype='integer' name='[active]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Day Since First Case' datatype='integer' name='[day_since_first_case]' role='dimension' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[day_since_first_case]' derivation='None' name='[none:day_since_first_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:day_since_first_case:qk]' included-values='in-range'>
            <min>1</min>
            <max>29</max>
          </filter>
          <filter class='categorical' column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Europe &amp; Central Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12lpec714qinjx19lglrq1pbjisr].[none:day_since_first_case:qk]</column>
            <column>[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]</column>
            <column>[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12lpec714qinjx19lglrq1pbjisr].[sum:active:qk]</rows>
        <cols>[federated.12lpec714qinjx19lglrq1pbjisr].[none:day_since_first_case:qk]</cols>
      </table>
      <simple-id uuid='{5AACD038-55B0-48F2-A1C2-0F614909D2B8}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:date:ok]' type='filter' />
            <card param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:confirmed_daily:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12lpec714qinjx19lglrq1pbjisr].[none:confirmed_daily:qk]</field>
            <field>[federated.12lpec714qinjx19lglrq1pbjisr].[none:date:qk]</field>
            <field>[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54F56ECE-F292-4B8B-983E-B95675728260}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]' type='filter' values='cascading' />
            <card param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]' type='filter' />
            <card param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:day_since_first_case:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12lpec714qinjx19lglrq1pbjisr].[none:country:nk]</field>
            <field>[federated.12lpec714qinjx19lglrq1pbjisr].[none:day_since_first_case:qk]</field>
            <field>[federated.12lpec714qinjx19lglrq1pbjisr].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DC1C714-62D6-4A88-A8B1-6B6CD4FE63C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      eI7/lAAeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
